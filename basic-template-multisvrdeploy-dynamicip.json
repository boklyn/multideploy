{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "timezone": {
      "type": "string",
      "metadata": {
        "description": "The timezone in which you want the machines to be"
      },
      "defaultValue": "Mountain Standard Time"
    },
    "diagStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage account to store your diagnostic logs."
      }
    },
    "VHDStorageAccountNames": {
      "type": "string",
      "metadata": {
        "description": "The names of the new storage account created to store the VMs disks. Remember reccomended max vhd disk is 40"
      }
    },
    "publicips": {
      "type": "array",
      "metadata": {
        "description": "The names of the new storage account created to store the VMs disks. Remember reccomended max vhd disk is 40"
      },
      "defaultValue": [ "" ]
    },
    "existingVNETName": {
      "type": "string",
      "metadata": {
        "description": "Existing VNET that you want to place the servers for."
      }
    },
    "vnetrgpname": {
      "type": "string",
      "metadata": {
        "description": "Resource group where the vnet is located. "
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet where you want to place the virtual maachines."
      }
    },
    "domainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain where you want the machines to join to"
      },
      "defaultValue": ""
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain used to join the domain"
      },
      "defaultValue": ""
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain used to join the domain"
      },
      "defaultValue": ""
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "optionsselectpath": {
      "type": "securestring",
      "metadata": {
        "description": "the secure location of the opetion selector"
      }
    },
    "initidiskpath": {
      "type": "securestring",
      "metadata": {
        "description": "the secure location of the opetion selector"
      },
      "defaultValue": ""
    },
    "nicoffset": {
      "type": "int",
      "metadata": {
        "description": "the nic offset count for the naming of the nic"
      }
    },
    "sitecount": {
      "type": "int",
      "metadata": {
        "description": "The number of servers to be provisioned "
      }
    },
    "nicnameformat": {
      "type": "string",
      "metadata": {
        "description": "the format of the nic to be provisioned"
      }
    },
    "vmnames": {
      "type": "array",
      "metadata": {
        "description": "the computer names of provisioned systems. "
      }
    },
    "vmsizes": {
      "type": "array",
      "metadata": {
        "description": "The sizes of the virtual machines"
      }
    },
    "vmstaticips": {
      "type": "array",
      "metadata": {
        "description": "static ip address list. for each assigned virtual machine"
      },
      "defaultValue": [ "" ]
    },
    "diskcount": {
      "type": "array",
      "metadata": {
        "description": "the number of extra disks each virtual machine will have. Must be in array form. "
      }
    },
    "disksizes": {
      "type": "array",
      "metadata": {
        "description": "the sizes of each disk needed for each virtual machine."
      }
    },
    "initdisksizes": {
      "type": "array",
      "metadata": {
        "description": "the sizes to initialize the disks."
      }
    },
    "imagePublisher": {
      "type": "string",
      "metadata": {
        "description": "the image used by the virtual machine"
      },
      "allowedValues": [
        "MicrosoftWindowsServer",
        "MicrosoftSQLServer"
      ],
      "defaultValue": "MicrosoftWindowsServer"
    },
    "imageOffer": {
      "type": "string",
      "metadata": {
        "description": "the image subtype of each virtual machine"
      },
      "allowedValues": [
        "WindowsServer",
        "SQL2012SP2-WS2012R2"
      ],
      "defaultValue": "WindowsServer"
    },
    "windowsOSversion": {
      "type": "array",
      "metadata": {
        "description": "The image version. "
      }
    },
    "tag1": {
      "type": "array",
      "metadata": {
        "description": "The type of developer machines. "
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId(parameters('vnetrgpname'), 'Microsoft.Network/virtualNetworks', parameters('existingVNETName'))]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "diskCaching": "ReadWrite",
    "doublequote":  "\""
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('nicnameformat'), copyIndex(parameters('nicoffset')))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "niccopy",
        "count": "[length(parameters('vmnames'))]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(toLower(parameters('vmnames')[copyIndex()]),'-disksel')]",
      "type": "Microsoft.Resources/deployments",
      "copy": {
        "name": "vmcopy",
        "count": "[length(parameters('vmnames'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[parameters('optionsselectpath')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "numDataDisks": {
            "value": "[concat('', parameters('diskcount')[copyIndex()])]"
          },
          "diskStorageAccountName": {
            "value": "[parameters('VHDStorageAccountNames')]"
          },
          "diskCaching": {
            "value": "[variables('diskCaching')]"
          },
          "folderpath": {
            "value": "[concat(toLower(parameters('vmnames')[copyIndex()]),'/')]"
          },
          "disksizes": {
            "value": "[parameters('disksizes')[copyIndex()]]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[variables('apiVersion')]",
          "type": "Microsoft.Compute/virtualMachines",
          "name": "[parameters('vmnames')[copyIndex()]]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicnameformat'), copyIndex(parameters('nicoffset'))))]",
            "[resourceId('Microsoft.Resources/deployments', concat(toLower(parameters('vmnames')[copyIndex()]),'-disksel'))]"
          ],
          "properties": {
            "hardwareProfile": {
              "vmSize": "[parameters('vmsizes')[copyIndex()]]"
            },
            "osProfile": {
              "computerName": "[parameters('vmnames')[copyIndex()]]",
              "adminUsername": "[parameters('vmAdminUsername')]",
              "adminPassword": "[parameters('vmAdminPassword')]",
              "windowsConfiguration": {
                "timeZone": "[parameters('timezone')]"
              }
            },
            "storageProfile": {
              "imageReference": {
                "publisher": "[parameters('imagePublisher')]",
                "offer": "[parameters('imageOffer')]",
                "sku": "[parameters('windowsOSversion')[copyIndex()]]",
                "version": "latest"
              },
              "osDisk": {
                "name": "osdisk",
                "vhd": {
                  "uri": "[concat('http://',parameters('VHDStorageAccountNames'),'.blob.core.windows.net/',toLower(concat(parameters('vmnames')[copyIndex()],'/',parameters('vmnames')[copyIndex()],'-1.vhd')))]"
                },
                "caching": "ReadWrite",
                "createOption": "FromImage"
              },
              "dataDisks": "[reference(concat(toLower(parameters('vmnames')[copyIndex()]),'-disksel')).outputs.dataDiskArray.value]"
            },
            "networkProfile": {
              "networkInterfaces": [
                {
                  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('nicnameformat'), copyIndex(parameters('nicoffset'))))]"
                }
              ]
            },
            "diagnosticsProfile": {
              "bootDiagnostics": {
                "enabled": "true",
                "storageUri": "[concat('http://',parameters('diagStorageAccountName'),'.blob.core.windows.net')]"
              }
            }
          }
        }
      ]
    }
  ]
}